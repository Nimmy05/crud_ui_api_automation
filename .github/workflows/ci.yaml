name: CI Pipeline for UI & API Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install backend dependencies
        working-directory: server
        run: npm install

      - name: Install frontend dependencies
        working-directory: client
        run: npm install

      - name: Create backend .env
        working-directory: server
        run: |
          echo "MONGODB_URI=mongodb://localhost:27017/mern_todo_db" > .env
          echo "PORT=3001" >> .env
          echo "JWT_SECRET_KEY=newUITe&t!23" >> .env
          echo "BASE_URL=http://localhost:3001/api" >> .env
          echo "USER_EMAIL=test67@gmail.com" >> .env
          echo "USER_PASSWORD=abc123" >> .env

      - name: Create frontend .env
        working-directory: client
        run: |
          echo "REACT_BASE_URL=http://localhost:3000" > .env
          echo "USER_EMAIL=test67@gmail.com" >> .env
          echo "USER_PASSWORD=abc123" >> .env

      - name: Start backend server
        working-directory: server
        run: nohup npm run dev > backend.log 2>&1 &

      - name: Wait for backend to be fully ready
        run: |
          echo "Waiting for backend to start..."
          sleep 10 # Give the server 10 seconds to initialize
          npm install -g wait-on
          # Wait for 60 seconds, polling every 2 seconds
          wait-on http://localhost:3001/api/todos -t 60000 -i 2000


      - name: Show backend logs (for debugging if needed)
        run: cat server/backend.log || true

      - name: Start frontend server
        working-directory: client
        run: nohup npm start > frontend.log 2>&1 &

      - name: Wait for frontend to be ready
        run: wait-on http://localhost:3000

      - name: Show frontend logs (for debugging if needed)
        run: cat client/frontend.log || true

      - name: Install Playwright browsers
        working-directory: client
        run: npx playwright install --with-deps

      - name: Run Playwright UI tests
        working-directory: client
        run: npx playwright test --workers=1

      - name: Run API tests
        working-directory: server
        run: npm test

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: client/playwright-report
